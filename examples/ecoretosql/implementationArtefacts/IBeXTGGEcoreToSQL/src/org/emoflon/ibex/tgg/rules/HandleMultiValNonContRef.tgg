#using IBeXTGGEcoreToSQL.*
#using AttrCondDefLibrary.*

#rule HandleMultiValNonContRef #with IBeXTGGEcoreToSQL

#source { 
	from:EClass
	
	++ ref:EReference {
		upperBound := -1
		containment := false
		
		++ -eContainingClass->from
		++ -eType->to
	}
	
	to:EClass
}

#target {
	s:Schema {
		-ownedTables->fromT
		-ownedTables->toT
		++-ownedTables->refT
	}
	
	fromT:Table 
	
	++ refT:Table {
		++-ownedColumns->col_id
		++-ownedColumns->col_ref
		++-ownedForeignKeys->fk_id
		++-ownedForeignKeys->fk_ref
	}
	
	++ fk_id:ForeignKey {
		++-column->col_id
		++-referencedTable->fromT
	}
	
	++ fk_ref:ForeignKey {
		++-column->col_ref
		++-referencedTable->refT
	}
	
	++ col_id:Column {
		name := "id"
	}
	
	++ col_ref:Column {
		name := "ref"
	} 
	
	toT:Table
}

#correspondence {
	f2f:ClassToTable {
		#src->from
		#trg->fromT
	}
	
	t2t:ClassToTable {
		#src->to
		#trg->toT		
	}
}

#attributeConditions {
	concat("_", from.name, ref.name, refT.name)
}
